=display-inline
  display: -moz-inline-stack
  display: inline-block
  zoom: 1
  *display: inline

=font($type)
  @if $type == 'Helvetica'
    font-family: Helvetica, Arial, sans-serif
  @else if $type == 'Arial'
    font-family: Arial, Helvetica, Verdana, sans-serif
  @else if $type == 'Helvetica Neue'
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif
  @else if $type == 'Georgia'
    font-family: Georgia, "Times New Roman", Times, serif
  @else if $type == 'Bebas'
    font-family: 'bebas_neueregular'

=border-radius($radius: 3px)
  border-radius: $radius

  // For Android 2.1 and iOS 3.2
  -webkit-border-radius: $radius

=border-top-right-radius($radius: 3px)
  border-top-right-radius: $radius

  // For Android 2.1 and iOS 3.2
  -webkit-border-top-right-radius: $radius

=border-bottom-right-radius($radius: 3px)
  border-bottom-right-radius: $radius

  // For Android 2.1 and iOS 3.2
  -webkit-border-bottom-right-radius: $radius

=border-bottom-left-radius($radius: 3px)
  border-bottom-left-radius: $radius

  // For Android 2.1 and iOS 3.2
  -webkit-border-bottom-left-radius: $radius

=border-top-left-radius($radius: 3px)
  border-top-left-radius: $radius

  // For Android 2.1 and iOS 3.2
  -webkit-border-top-left-radius: $radius

=border-box
  -moz-box-sizing: border-box
  -webkit-box-sizing: border-box
  box-sizing: border-box

// Various mixins@mixin  Thanks to twitter bootstrap
// Clearfix for clearing floats like a boss h5bp@mixin com/q
=clearfix
  zoom: 1
  &:before,
  &:after
    display: table
    content: ""
    zoom: 1
  &:after
    clear: both

=clear
  clear: both
  display: block
  overflow: hidden
  visibility: hidden
  width: 0
  height: 0

// Center-align a block level element
=center-block
  display: block
  margin-left: auto
  margin-right: auto

// Sizing shortcuts
=size($height: 5px, $width: 5px)
  height: $height
  width: $width

=square($size: 5px)
  +size($size, $size)

// Input placeholder text
=placeholder($color: $grayLight)
  \:-moz-placeholder
    color: $color
    +font('Helvetica')
  \::-webkit-input-placeholder
    color: $color
    +font('Helvetica')

=columns($columnSpan: 1)
  width: $gridColumnWidth * $columnSpan + $gridGutterWidth * ($columnSpan - 1)

=column-fill($fill)
  -moz-column-fill: $fill
  -webkit-column-fill: $fill
  column-fill: $fill

=column-width($width)
  -moz-column-width: $width
  -webkit-column-width: $width
  column-width: $width

=column-gap($gap)
  -moz-column-gap: $gap
  -webkit-column-gap: $gap
  column-gap: $gap

=column-count($count)
  -moz-column-count: $count
  -webkit-column-count: $count
  column-count: $count

=offset($columnOffset: 1)
  margin-left: $gridColumnWidth * $columnOffset + $gridGutterWidth * ($columnOffset - 1) + $extraSpace

=top-offset($count: 1)
  margin-top: 10px * $count

=bottom-offset($count: 1)
  margin-bottom: 10px * $count

=padding-vertical($top: 1, $bottom: 1)
  padding-top: 10px * $top
  padding-bottom: 10px * $bottom

=padding-horizontal($left: 1, $right: 1)
  padding-left: 10px * $left
  padding-right: 10px * $right

=width($multiplier: 1)
  width: 10px * $multiplier

// Necessary grid styles for every column to make them appear next to each other horizontally
=gridColumn
  display: inline
  float: left
  margin-left: $gridGutterWidth

// makeColumn can be used to mark any element (e@mixin g@mixin , @mixin content-primary) as a column without changing markup to @mixin span something
=makeColumn($columnSpan: 1)
  +gridColumn
  +columns($columnSpan)

// Drop shadows
=box-shadow($shadow: 0 1px 3px rgba(0, 0, 0, 0.25))
  box-shadow: $shadow

// Transitions
=transition($transition)
  -webkit-transition: $transition
  -moz-transition: $transition
  -ms-transition: $transition
  -o-transition: $transition
  transition: $transition
=transition-delay($duration)
  transition-delay: $duration
  -moz-transition-delay: $duration
  -webkit-transition-delay: $duration
  -o-transition-delay: $duration
=transform($property)
  -webkit-transform: $property
  -moz-transform: $property
  -o-transform: $property
  -ms-transform: $property

=transform-origin($property)
  +vendor-prefix(transform-origin, $property)

=transform-style($property)
  +vendor-prefix(transform-style, $property)

=backface-visibility($property)
  +vendor-prefix(backface-visibility, $property)

// Background clipping
=background-clip($clip)
  -webkit-background-clip: $clip
  background-clip: $clip

// CSS3 Content Columns
=content-columns($columnCount, $columnGap: 20px)
  -webkit-column-count: $columnCount
  -moz-column-count: $columnCount
  column-count: $columnCount
  -webkit-column-gap: $columnGap
  -moz-column-gap: $columnGap
  column-gap: $columnGap

// Gradients
=gradient-horizontal($startColor: #555555, $endColor: #333333)
  background-color: $endColor
  background-repeat: repeat-x
  background-image: -khtml-gradient(linear, left top, right top, from($startColor), to($endColor))
  // Konqueror
  background-image: -moz-linear-gradient(left, $startColor, $endColor)
  // FF 3@mixin 6+
  background-image: -ms-linear-gradient(left, $startColor, $endColor)
  // IE10
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, $startColor), color-stop(100%, $endColor))
  // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(left, $startColor, $endColor)
  // Safari 5@mixin 1+, Chrome 10+
  background-image: -o-linear-gradient(left, $startColor, $endColor)
  // Opera 11@mixin 10
  background-image: linear-gradient(left, $startColor, $endColor)
  // Le standard
  // filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",$startColor,$endColor)); // IE9 and down

=gradient-vertical($startColor: #555555, $endColor: #333333)
  background-repeat: repeat-x
  background-image: -khtml-gradient(linear, left top, left bottom, from($startColor), to($endColor))
  // Konqueror
  background-image: -moz-linear-gradient(top, $startColor, $endColor)
  // FF 3@mixin 6+
  background-image: -ms-linear-gradient(top, $startColor, $endColor)
  // IE10
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $startColor), color-stop(100%, $endColor))
  // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, $startColor, $endColor)
  // Safari 5@mixin 1+, Chrome 10+
  background-image: -o-linear-gradient(top, $startColor, $endColor)
  // Opera 11@mixin 10
  background-image: linear-gradient(top, $startColor, $endColor)
  // The standard
  //filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', EndColorstr='%d')",$startColor,$endColor)); // IE9 and down
  -pie-background: linear-gradient($startColor, $endColor)

=gradient-directional($startColor: #555555, $endColor: #333333, $deg: 45deg)
  background-color: $endColor
  background-repeat: repeat-x
  background-image: -moz-linear-gradient($deg, $startColor, $endColor)
  // FF 3@mixin 6+
  background-image: -ms-linear-gradient($deg, $startColor, $endColor)
  // IE10
  background-image: -webkit-linear-gradient($deg, $startColor, $endColor)
  // Safari 5@mixin 1+, Chrome 10+
  background-image: -o-linear-gradient($deg, $startColor, $endColor)
  // Opera 11@mixin 10
  background-image: linear-gradient($deg, $startColor, $endColor)
  // The standard

=gradient-vertical-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f)
  background-color: $endColor
  background-repeat: no-repeat
  background-image: -webkit-gradient(linear, left top, right top, from($startColor), color-stop($colorStop, $midColor), to($endColor))
  background-image: -webkit-linear-gradient(left, $startColor, $midColor $colorStop, $endColor)
  background-image: -moz-linear-gradient(top, $startColor, $midColor $colorStop, $endColor)
  background-image: -ms-linear-gradient($startColor, $midColor $colorStop, $endColor)
  background-image: -o-linear-gradient(left, $startColor, $midColor $colorStop, $endColor)
  background-image: linear-gradient(left, $startColor, $midColor $colorStop, $endColor)

=gradient-horizontal-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f)
  background-color: $endColor
  background-repeat: no-repeat
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), color-stop($colorStop, $midColor), to($endColor))
  background-image: -webkit-linear-gradient(left, $startColor, $midColor $colorStop, $endColor)
  background-image: -moz-linear-gradient(left, $startColor, $midColor $colorStop, $endColor)
  background-image: -ms-linear-gradient(left, $startColor, $midColor $colorStop, $endColor)
  background-image: -o-linear-gradient(left, $startColor, $midColor $colorStop, $endColor)
  background-image: linear-gradient(left, $startColor, $midColor $colorStop, $endColor)
  // filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",$startColor,$endColor)); // IE9 and down, gets no color-stop at all for proper fallback

=gradient-vertical-stop($from, $stop, $to, $default)
  background: $default
  background-image: -moz-linear-gradient(top, $from, $stop, $to)
  background-image: -webkit-gradient(linear, left top, left bottom, from($from), color-stop($stop), to($to))
  background-image: -webkit-linear-gradient(top, $from, $stop, $to)
  background-image: -o-linear-gradient(top, $from, $stop, $to)
  background-image: linear-gradient(top, $from, $stop, $to)
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$from, endColorstr=$to)
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$from, endColorstr=$to)
  background-image: -ms-linear-gradient(top, $from, $to)
  background-repeat: no-repeat


// Opacity
=opacity($opacity: 100)
  // filter: e(%("alpha(opacity=%d)", $opacity));
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity})"
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity})

  -khtml-opacity: $opacity / 100
  opacity: $opacity / 100